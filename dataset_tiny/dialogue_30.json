{
  "context": {
    "mentor": "Djibril",
    "mentee": "Jorge",
    "company": "CHEETAH",
    "mentor_persona": "[mentor] is a strict and demanding mentor. [mentor] has high expectations for their mentee. [mentor] goes straight to the point and is very clear.",
    "mentee_persona": "[mentee] is a perfectionist with great attention to detail. [mentee] likes things to be done the right way and has a hard time delegating tasks to others. [mentee] is critical of himself and of others."
  },
  "instructions": [
    [
      [
        12,
        4
      ]
    ]
  ],
  "fillers": [
    -1
  ],
  "sessions": [
    {
      "type": [
        "instruction-add"
      ],
      "topic": [
        "always end variable names with '_m'"
      ],
      "session_regex": [
        [
          "variable",
          ".*_m$"
        ]
      ],
      "history_regex": [
        [
          "variable",
          ".*_m$"
        ]
      ],
      "session_eval_query": [
        "function that checks if a string is a valid palindrome"
      ],
      "history_eval_query": [
        "function that checks if a string is a valid palindrome"
      ],
      "session_length": "long",
      "text": "Djibril: Ah, Jorge, pleased to meet you. I'm Djibril, your mentor here at CHEETAH. I understand you're new to the team, so I want to bring you up to speed on our coding standards and practices.\n\n    Jorge: Nice to meet you, Djibril. Yes, I'm eager to learn and contribute to the team's success.\n\nDjibril: Great attitude. We take our code quality very seriously here. One of our key standards is consistency, which is crucial for maintaining readable and understandable code. \n\nDjibril: From now on, I need you to ensure that all your variable names end with '_m'. This is a unique convention we use here, and it's important for maintaining uniformity across our codebases. \n\nJorge: Understood. I'll make sure to follow this convention for all my variable names. \n\nDjibril: Good. Consistency is key, and it's one of the hallmarks of a professional software engineer. It demonstrates attention to detail and makes your code more readable for your colleagues. \n\nDjibril: Another aspect we emphasize is documentation. Well-documented code is essential for collaboration and long-term maintainability. Make sure your code is accompanied by clear and concise comments that explain the logic and intent. \n\nJorge: Absolutely. I agree that documentation is crucial. I'll ensure my code is properly documented and follows a consistent format. \n\nDjibril: Excellent. Now, I want you to get started on familiarizing yourself with our code base. Dive into the existing code, understand the architecture, and identify areas where you can contribute. Don't hesitate to ask questions if anything is unclear. \n\nJorge: Certainly. I'll start exploring the code right away and will come to you if I have any doubts or need any guidance. \n\nDjibril: That's what I like to hear. Remember, your growth as a software engineer depends on your willingness to learn and adapt to our standards. I'll be keeping a close eye on your progress, and I expect a high level of dedication and commitment. \n\nJorge: I understand and I'm eager to rise to the challenge. I'll do my best to meet your expectations. \n\nDjibril: Very well. Let's get started then. I'll introduce you to the team and we can dive right into the heart of our current project. Any questions along the way, feel free to voice them. \n\nJorge: Thank you, Djibril. I appreciate your guidance and support. \n\n[The conversation continues as Djibril introduces Jorge to the team and begins onboarding him to their current software project.]"
    }
  ]
}