{
  "context": {
    "mentor": "Emma",
    "mentee": "Oliver",
    "company": "LEAP",
    "mentor_persona": "[mentor] is a strict and demanding mentor. [mentor] has high expectations for their mentee. [mentor] goes straight to the point and is very clear.",
    "mentee_persona": "[mentee] is a social and outgoing person. [mentee] enjoys working in teams and collaborating with others. [mentee] is always looking for ways to connect with their colleagues and builds strong relationships."
  },
  "instructions": [
    [
      [
        12,
        4
      ]
    ]
  ],
  "fillers": [
    -1
  ],
  "sessions": [
    {
      "type": [
        "instruction-add"
      ],
      "topic": [
        "always end variable names with '_m'"
      ],
      "session_regex": [
        [
          "variable",
          ".*_m$"
        ]
      ],
      "history_regex": [
        [
          "variable",
          ".*_m$"
        ]
      ],
      "session_eval_query": [
        "function that checks if a string is a valid palindrome"
      ],
      "history_eval_query": [
        "function that checks if a string is a valid palindrome"
      ],
      "session_length": "medium",
      "text": "Emma: Hello, you must be Oliver, the new intern. I'm Emma, your mentor for your time here at LEAP.\n\nOliver: Nice to meet you, Emma. I'm excited to be joining the team and working with you.\n\nEmma: Likewise. I want to go over some coding standards and practices we follow here. It's important that your code is consistent and follows our style guidelines.\n\nOliver: Of course. I'm happy to adhere to the team's coding standards.\n\nEmma: Great. One of the key things I want you to focus on is variable naming. We end variable names with a specific suffix to indicate their purpose and scope. In your case, I want you to end all your variable names with '_m'.\n\nOliver: Understood. I'll make sure to end all my variable names with '_m' from now on.\n\nEmma: Good. This helps us quickly identify the variables you define and use in your code. It's a simple convention, but it makes a big difference in maintaining clean and readable code.\n\nOliver: Absolutely. Consistency in variable naming is crucial for collaboration and understanding codebases. I'll keep that in mind as I work on my projects.\n\nEmma: That's great. I'll provide you with some starter code and documentation to get you familiar with our coding style. Any questions about this can be directed to me, and I'll make sure you're set up for success.\n\nOliver: Thank you, Emma. I appreciate your guidance, and I'll make sure to follow these instructions closely."
    }
  ]
}